pipeline {
    agent { label 'docker' }
    triggers { pollSCM('* * * * *') }
    stages {
        stage('Cloning_the_git') {
            steps {
                git branch: 'main',
                       url: 'https://github.com/maheshryali123/poojastores.git'
            }
        }
        stage('Copy_the_code_build_the_code') {
            steps {
                sh """
                cp -r /home/ubuntu/remote_repo/workspace/poojastore/ppojastores/trunk/PoojaStores/* /home/ubuntu/mahesh
                /home/ubuntu/dotnet build /home/ubuntu/mahesh/PoojaStores.csproj
                """
            }
        }
        stage('Build_the_Docker_image') {
            steps {
                sh """
                docker image build -t poojastoresnew:1.0 .
                docker image tag poojastoresnew:1.0 626867783879.dkr.ecr.us-east-1.amazonaws.com/poojastore:${BUILD_NUMBER}
                docker image push 626867783879.dkr.ecr.us-east-1.amazonaws.com/poojastore:${BUILD_NUMBER}
                """
            }
        }
        stage('scan_the_docker_image') {
            steps{
                sh """
                    trivy image 626867783879.dkr.ecr.us-east-1.amazonaws.com/poojastore:${BUILD_NUMBER} >> /home/ubuntu/image_scanning_report.csv
                """
            }
        }
        stage('Deploy_application_to_k8s') {
            agent { label 'k8s'}
            steps {
                sh """
                pwd
                /usr/bin/kubectl apply -f ./ppojastores/trunk/PoojaStores/namespace.yaml
                /usr/bin/kubectl apply -f ./ppojastores/trunk/PoojaStores/deployment.yaml
                /usr/bin/kubectl apply -f ./ppojastores/trunk/PoojaStores/service.yaml
                """
            }
        }
    }
}